<refentry id="VisualOS-Swap">
<refmeta>
<refentrytitle>Swap</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>VISUALOS Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>Swap</refname><refpurpose>Swapping system.</refpurpose>
</refnamediv>

<refsynopsisdiv><title>Synopsis</title>

<synopsis>



<link linkend="void">void</link>        <link linkend="MEM-swap-init">MEM_swap_init</link>                   (void);
<link linkend="void">void</link>        <link linkend="MEM-swapout-page">MEM_swapout_page</link>                (<link linkend="gint">gint</link> pid,
                                             <link linkend="gint">gint</link> page);
<link linkend="void">void</link>        <link linkend="MEM-swapin-page">MEM_swapin_page</link>                 (<link linkend="gint">gint</link> pid,
                                             <link linkend="gint">gint</link> page,
                                             <link linkend="guint32">guint32</link> set_flags);
</synopsis>
</refsynopsisdiv>









<refsect1>
<title>Description</title>
<para>
This functions serve to get process pages in and out of the swap device.
</para>
</refsect1>

<refsect1>
<title>Details</title>
<refsect2>
<title><anchor id="MEM-swap-init">MEM_swap_init ()</title>
<indexterm><primary>MEM_swap_init</primary></indexterm><programlisting><link linkend="void">void</link>        MEM_swap_init                   (void);</programlisting>
<para>
Gets things ready to be able to swap memory in and out.</para>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="MEM-swapout-page">MEM_swapout_page ()</title>
<indexterm><primary>MEM_swapout_page</primary></indexterm><programlisting><link linkend="void">void</link>        MEM_swapout_page                (<link linkend="gint">gint</link> pid,
                                             <link linkend="gint">gint</link> page);</programlisting>
<para>
Writes <parameter>page</parameter> from Proces' <parameter>pid</parameter> virtual memory address space from memory
into a free block in the swap device.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>pid</parameter>&nbsp;:</term>
<listitem><simpara> The Process Identification number.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>page</parameter>&nbsp;:</term>
<listitem><simpara> Which one of the process' pages we what back.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="MEM-swapin-page">MEM_swapin_page ()</title>
<indexterm><primary>MEM_swapin_page</primary></indexterm><programlisting><link linkend="void">void</link>        MEM_swapin_page                 (<link linkend="gint">gint</link> pid,
                                             <link linkend="gint">gint</link> page,
                                             <link linkend="guint32">guint32</link> set_flags);</programlisting>
<para>
Reads <parameter>page</parameter> from Proces' <parameter>pid</parameter> virtual memory address space into memory from
the swap device
</para>
<para>
If the page has never been swapped out we will suppose it is in the
first free swap block and request an IO access to it.
</para>
<para>
If the page is already swaping in then we will take note of 
<parameter>set_flags</parameter> and let it be.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>pid</parameter>&nbsp;:</term>
<listitem><simpara> The Process Identification number
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>page</parameter>&nbsp;:</term>
<listitem><simpara> Which one of the process' pages we what back
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>set_flags</parameter>&nbsp;:</term>
<listitem><simpara> This flags will be set on the frame when when one is assigned
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>




</refentry>
