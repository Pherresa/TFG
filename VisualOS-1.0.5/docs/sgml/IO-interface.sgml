<refentry id="VisualOS-IO-Interface">
<refmeta>
<refentrytitle>IO Interface</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>VISUALOS Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>IO Interface</refname><refpurpose>IO interface to the other subsystems.</refpurpose>
</refnamediv>

<refsynopsisdiv><title>Synopsis</title>

<synopsis>



<link linkend="void">void</link>        (<link linkend="block-ready-callback-t">*block_ready_callback_t</link>)       (<link linkend="gint">gint</link> block);
<link linkend="gint">gint</link>        <link linkend="io-register-block-ready">io_register_block_ready</link>         (<link linkend="block-ready-callback-t">block_ready_callback_t</link> func);
<link linkend="void">void</link>        <link linkend="io-request-block">io_request_block</link>                (<link linkend="gint">gint</link> block);
<link linkend="void">void</link>        <link linkend="io-request-swap-block">io_request_swap_block</link>           (<link linkend="gint">gint</link> block);
</synopsis>
</refsynopsisdiv>









<refsect1>
<title>Description</title>
<para>
This functions allow the other subsystems to interact, througth the messaging
service, with the I/O subsystem.

</para>
</refsect1>

<refsect1>
<title>Details</title>
<refsect2>
<title><anchor id="block-ready-callback-t">block_ready_callback_t ()</title>
<indexterm><primary>block_ready_callback_t</primary></indexterm><programlisting><link linkend="void">void</link>        (*block_ready_callback_t)       (<link linkend="gint">gint</link> block);</programlisting>
<para>
Function pointer type for the callback used on <parameter>io_register_block_ready</parameter>.</para>
<para>
Function pointer type for the callback used on <parameter>io_register_block_ready</parameter>.
</para><variablelist role="params">
<varlistentry><term><parameter>block</parameter>&nbsp;:</term>
<listitem><simpara> block number of the fulfilled IO access.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="io-register-block-ready">io_register_block_ready ()</title>
<indexterm><primary>io_register_block_ready</primary></indexterm><programlisting><link linkend="gint">gint</link>        io_register_block_ready         (<link linkend="block-ready-callback-t">block_ready_callback_t</link> func);</programlisting>
<para>
Instructs the IO subsystem to call <parameter>func</parameter> when a block access is finished.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>func</parameter>&nbsp;:</term>
<listitem><simpara> function to be called when a requested block access is finished.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> nothing important.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="io-request-block">io_request_block ()</title>
<indexterm><primary>io_request_block</primary></indexterm><programlisting><link linkend="void">void</link>        io_request_block                (<link linkend="gint">gint</link> block);</programlisting>
<para>
Instructs the IO subsystem to accesses <parameter>block</parameter> from the data area.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>block</parameter>&nbsp;:</term>
<listitem><simpara> data block to be accessed.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="io-request-swap-block">io_request_swap_block ()</title>
<indexterm><primary>io_request_swap_block</primary></indexterm><programlisting><link linkend="void">void</link>        io_request_swap_block           (<link linkend="gint">gint</link> block);</programlisting>
<para>
Instructs the IO subsystem to accesses <parameter>block</parameter> from the swap area.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>block</parameter>&nbsp;:</term>
<listitem><simpara> swap block to be accessed.
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>




</refentry>
