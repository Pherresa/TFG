<refentry id="VisualOS-SCHED">
<refmeta>
<refentrytitle>Scheduler</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>VISUALOS Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>Scheduler</refname><refpurpose>Scheduling facility</refpurpose>
</refnamediv>

<refsynopsisdiv><title>Synopsis</title>

<synopsis>



<link linkend="gint">gint</link>        <link linkend="sched-init">sched_init</link>                      (void);
<link linkend="gpointer">gpointer</link>    <link linkend="sched-event">sched_event</link>                     (<link linkend="gint">gint</link> sched_time,
                                             <link linkend="sched-callback-t">sched_callback_t</link> func,
                                             <link linkend="gpointer">gpointer</link> data,
                                             <link linkend="gint">gint</link> flags);
<link linkend="gpointer">gpointer</link>    <link linkend="sched-delay">sched_delay</link>                     (<link linkend="gint">gint</link> delay,
                                             <link linkend="sched-callback-t">sched_callback_t</link> func,
                                             <link linkend="gpointer">gpointer</link> data,
                                             <link linkend="gint">gint</link> flags);
<link linkend="void">void</link>        (<link linkend="sched-callback-t">*sched_callback_t</link>)             (<link linkend="gint">gint</link> time,
                                             <link linkend="gpointer">gpointer</link> data);
enum        <link linkend="sched-flags-t">sched_flags_t</link>;
</synopsis>
</refsynopsisdiv>









<refsect1>
<title>Description</title>
<para>
This facility allows the code to do things at certain times without having to
handle and count all the clock's TICK events.

</para>
</refsect1>

<refsect1>
<title>Details</title>
<refsect2>
<title><anchor id="sched-init">sched_init ()</title>
<indexterm><primary>sched_init</primary></indexterm><programlisting><link linkend="gint">gint</link>        sched_init                      (void);</programlisting>
<para>
Initializes the scheduling facility. Mainly registering a callback for the 
clock subsystem.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> nothing interesting.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="sched-event">sched_event ()</title>
<indexterm><primary>sched_event</primary></indexterm><programlisting><link linkend="gpointer">gpointer</link>    sched_event                     (<link linkend="gint">gint</link> sched_time,
                                             <link linkend="sched-callback-t">sched_callback_t</link> func,
                                             <link linkend="gpointer">gpointer</link> data,
                                             <link linkend="gint">gint</link> flags);</programlisting>
<para>
Function <parameter>func</parameter> will be called at time <parameter>sched_time</parameter> with arguments <parameter>sched_time</parameter>
and <parameter>data</parameter>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>sched_time</parameter>&nbsp;:</term>
<listitem><simpara> absolute time as seen by the clock subsystem.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>func</parameter>&nbsp;:</term>
<listitem><simpara> function to be called when the time comes.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>data</parameter>&nbsp;:</term>
<listitem><simpara> will be used as the second argument to <parameter>func</parameter>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>flags</parameter>&nbsp;:</term>
<listitem><simpara> can be <parameter>FREE_SCHED_DATA</parameter> from <link linkend="sched-flags-t"><type>sched_flags_t</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> a pointer which is now useless from outsite but in the future
may allow for an event to be modified or canceled.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="sched-delay">sched_delay ()</title>
<indexterm><primary>sched_delay</primary></indexterm><programlisting><link linkend="gpointer">gpointer</link>    sched_delay                     (<link linkend="gint">gint</link> delay,
                                             <link linkend="sched-callback-t">sched_callback_t</link> func,
                                             <link linkend="gpointer">gpointer</link> data,
                                             <link linkend="gint">gint</link> flags);</programlisting>
<para>
function <parameter>func</parameter> will be called within <parameter>delay</parameter> time units with the current
time as first argument and <parameter>data</parameter> as the second.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>delay</parameter>&nbsp;:</term>
<listitem><simpara> relative time from now.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>func</parameter>&nbsp;:</term>
<listitem><simpara> function to be called when the time comes.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>data</parameter>&nbsp;:</term>
<listitem><simpara> will be used as the second argument to <parameter>func</parameter>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>flags</parameter>&nbsp;:</term>
<listitem><simpara> can be <parameter>FREE_SCHED_DATA</parameter> and <parameter>SCHED_RELOAD</parameter> from <link linkend="sched-flags-t"><type>sched_flags_t</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> a pointer which is now useless from outsite but in the future
may allow for an event to be modified or canceled.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="sched-callback-t">sched_callback_t ()</title>
<indexterm><primary>sched_callback_t</primary></indexterm><programlisting><link linkend="void">void</link>        (*sched_callback_t)             (<link linkend="gint">gint</link> time,
                                             <link linkend="gpointer">gpointer</link> data);</programlisting>
<para>
Funtion pointer type for the callbacks used in the sched facility.
</para><variablelist role="params">
<varlistentry><term><parameter>time</parameter>&nbsp;:</term>
<listitem><simpara>current time.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>data</parameter>&nbsp;:</term>
<listitem><simpara>data pointer specified when requesting the event.


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="sched-flags-t">enum sched_flags_t</title>
<indexterm><primary>sched_flags_t</primary></indexterm><programlisting>typedef enum {
	FREE_SCHED_DATA	= 1&lt;&lt;0, /* The data pointer will be used
				 * as argument to g_free() when done*/

	SCHED_RELOAD	= 1&lt;&lt;1  /* The callback will be called every "delay"
				 * time units */
} sched_flags_t;
</programlisting>
<para>
Flags for the scheduling facility
</para></refsect2>

</refsect1>




</refentry>
